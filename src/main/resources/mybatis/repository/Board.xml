<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-///mybatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="whitekim.mybatisblog.repository.BoardRepository">
    <resultMap id="Board" type="whitekim.mybatisblog.model.Board" autoMapping="false">
        <id column="id" property="id"/>
        <result column="title" property="title"/>
        <result column="content" property="content"/>
        <result column="at_created_time" property="atCreatedTime"/>
        <result column="at_updated_time" property="atUpdatedTime"/>
        <result column="is_deleted" property="isDeleted"/>
        <result column="image" property="image"/>
        <association property="author" resultMap="Member" javaType="whitekim.mybatisblog.model.Member"/>
        <collection property="replyList" resultMap="Reply" javaType="java.util.ArrayList" ofType="whitekim.mybatisblog.model.Reply"/>
    </resultMap>
    <resultMap id="Member" type="whitekim.mybatisblog.model.Member">
        <id column="member_id" property="id"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="nickname" property="nickname"/>
        <result column="at_created_time" property="atCreatedTime"/>
        <result column="at_updated_time" property="atUpdatedTime"/>
        <result column="is_deleted" property="isDeleted"/>
    </resultMap>
    <resultMap id="Reply" type="whitekim.mybatisblog.model.Reply">
        <id column="reply_id" property="id"/>
        <result column="message" property="message"/>
        <result column="at_created_time" property="atCreatedTime"/>
        <result column="at_updated_time" property="atUpdatedTime"/>
        <result column="is_deleted" property="isDeleted"/>
    </resultMap>
    <select id="findById" parameterType="Long" resultMap="Board">
        select
            b.id,
            b.title,
            b.content,
            b.author,
            b.at_created_time,
            b.at_updated_time,
            b.is_deleted,
            b.image,
            r.id as "reply_id",
            r.board,
            r.message,
            r.at_created_time,
            r.at_updated_time,
            m.id as "member_id",
            m.username,
            m.nickname,
            m.at_created_time,
            m.at_updated_time
        from
            Board b
                left join Reply r on r.board = b.id
                left join Member m on m.id = b.author
        where b.is_deleted = false and b.id = #{id};
    </select>
    <select id="findAll" resultType="whitekim.mybatisblog.model.Board">
        select
            b.id,
            b.title,
            b.content,
            b.author,
            b.at_created_time,
            b.at_updated_time,
            b.is_deleted,
            b.image
        from Board b
        where b.is_deleted = false
        order by b.at_created_time desc
        limit #{limit}, #{offset}
    </select>
    <select id="count" resultType="int">
        select
            count(*)
        from board b;
    </select>
    <insert id="save" parameterType="whitekim.mybatisblog.dto.request.BoardRequestDto">
        insert into Board(title, content, author, image, at_created_time, at_updated_time)
        values (#{title}, #{content}, #{authorId},#{imageId}, now(), now())
    </insert>
    <update id="update" parameterType="whitekim.mybatisblog.model.Board">
        update board b
        set b.title = #{title}, b.content = #{content}, at_updated_time = now()
        where b.id = #{id}
    </update>
    <delete id="deleteById" parameterType="Long">
        delete from Board b where b.id = #{id}
    </delete>
</mapper>